using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public enum SignType { Normal,Tutorial}

public class ImaginationSign : MonoBehaviour
{///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //-//////////////////////////////////////////////////////////////////////////////////////////////////       Memories       ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	[HideInInspector]
    public SignTechnikalDrawer ourHeadTeEchnicalDrawer;
	[HideInInspector]
    public SignType ourSignType;

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//+///////////////////////////////////////////////////////////////////////////////////////////////         Actions        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	//S///////////////////////////////////////////////////////////     Tutorial Sign     /////////////////////////////////////////////////////////////
	public void TutoriallSignInitalize()
	{
		ourSignType = SignType.Tutorial;
	}


	//S///////////////////////////////////////////////////////////     Normal Sign     /////////////////////////////////////////////////////////////
	public void NormalSignInitalize()
	{
		ourSignType = SignType.Normal;
		StartCoroutine(SignCounterToSelfDestruct());

	}

	//S///////////////////////////////////////////////////////////     COunt to selfdestruct     /////////////////////////////////////////////////////////////
	IEnumerator SignCounterToSelfDestruct()
	{
		yield return new WaitForSecondsRealtime(13f);
		StartCoroutine(Destroy());
	}



	


	//OA///////////////////////////////////////////////////////////     on x button click     /////////////////////////////////////////////////////////////
	public void OnXButtonClick()
	{
		StartCoroutine(Destroy());
	}

	//OA///////////////////////////////////////////////////////////     To destroy      /////////////////////////////////////////////////////////////
	IEnumerator Destroy()
    {
		
		ourHeadTeEchnicalDrawer.SubWorkerMessageSignIsGoingToLeave(this);
		yield return null;
        Destroy(gameObject);
    }
}
