using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CaneraScreenSizeChangeTeller : MonoBehaviour
{
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//-//////////////////////////////////////////////////////////////////////////////////////////////////       Memories       //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Camera ourHeadCameraToKeepTrackOf;

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//+///////////////////////////////////////////////////////////////////////////////////////////////         Actions        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	//S///////////////////////////////////////////////////////////     Initalization       /////////////////////////////////////////////////////////////
	private void Awake()
	{
		ourHeadCameraToKeepTrackOf = GetComponentInParent<Camera>();
		GameStateInformationProvider.GameInitalize += StartWorkingToKeepTrackOfCameraChange;
	}

	//S///////////////////////////////////////////////////////////     Start       /////////////////////////////////////////////////////////////
	void StartWorkingToKeepTrackOfCameraChange()
	{
		StartCoroutine(AlwaysCeckForSCreenSizeChange());
	}


	//S///////////////////////////////////////////////////////////     Always doing       /////////////////////////////////////////////////////////////
	IEnumerator AlwaysCeckForSCreenSizeChange()
	{
		Vector2 previousScreenSize = new Vector2(ourHeadCameraToKeepTrackOf.pixelWidth, ourHeadCameraToKeepTrackOf.pixelHeight);
		while (true)
		{
			if (ourHeadCameraToKeepTrackOf.pixelWidth != previousScreenSize.x || ourHeadCameraToKeepTrackOf.pixelHeight != previousScreenSize.y)
			{
				
				if (GameStateInformationProvider.ScreenSizeChanged != null)
				{
					GameStateInformationProvider.ScreenSizeChanged(new Vector2(ourHeadCameraToKeepTrackOf.pixelWidth, ourHeadCameraToKeepTrackOf.pixelHeight));
					
				}
				previousScreenSize = new Vector2(ourHeadCameraToKeepTrackOf.pixelWidth, ourHeadCameraToKeepTrackOf.pixelHeight);
			}
			yield return new WaitForSecondsRealtime(0.2f);
		}
	}
}
